// Generated by CoffeeScript 1.10.0
(function(window, $, templates) {
  var actionFormSelector, actionMap, actionMapSelector, addButton, appendActionValue, changeVersion, container, iframe, initPlugin, loadMessages, messages, partialSelector, patchUploadForm, prepareActionHandlers, replacePartial, section, setMessage, submitAction, uploadDone, uploadForm, uploadFormId, uploadStart;
  partialSelector = ".svm";
  actionFormSelector = ".overlay-version form";
  actionMapSelector = "#svm-action-map";
  uploadFormId = "#overlay-upload";
  container = $("#dashboard-svm-panel");
  section = container.parents('.o-collapsible-section');
  actionMap = {};
  messages = {
    'uploading': null
  };
  iframe = null;
  uploadForm = null;
  setMessage = function(msg) {
    container.find('.messages').remove();
    if (msg) {
      container.prepend(msg);
    }
    return section.trigger('remax');
  };
  replacePartial = function(data) {
    var partial;
    partial = container.find(partialSelector);
    partial.replaceWith(data);
    initPlugin();
    return section.trigger('remax');
  };
  uploadStart = function(e) {
    var button;
    iframe.on('load', uploadDone);
    button = uploadForm.find('button');
    button.prop('disabled', true);
    setMessage(messages.uploading);
  };
  uploadDone = function(e) {
    var partial;
    setMessage(null);
    partial = iframe.contents().find(partialSelector);
    return replacePartial(partial);
  };
  loadMessages = function() {
    var msgId, results;
    results = [];
    for (msgId in messages) {
      if (messages[msgId] === null) {
        $("#" + msgId).loadTemplate();
        results.push(messages[msgId] = templates[msgId]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };
  appendActionValue = function(form) {
    var action, button;
    button = form.find('button');
    action = $('<input>', {
      type: 'hidden',
      name: 'action',
      value: button.attr('value')
    });
    return form.append(action);
  };
  patchUploadForm = function() {
    iframe = container.find('iframe');
    uploadForm = container.find(uploadFormId);
    uploadForm.on('submit', uploadStart);
    uploadForm.prop('target', iframe.prop('name'));
    return appendActionValue(uploadForm);
  };
  addButton = function(form, action) {
    var button, buttonContainer;
    buttonContainer = form.find('.actions');
    button = $('<button>', {
      type: 'submit',
      name: 'action',
      value: action
    });
    button.text(actionMap[action]);
    return buttonContainer.append(button);
  };
  changeVersion = function() {
    var defaultValue, form, select, value;
    select = $(this);
    form = select.closest('form');
    form.find('button').remove();
    defaultValue = select.data('default');
    value = select.val();
    if (value === defaultValue) {
      addButton(form, 'disable');
      addButton(form, 'remove');
    } else if (value) {
      addButton(form, 'enable');
      addButton(form, 'remove');
    }
  };
  submitAction = function(e) {
    var form, res, url;
    e.preventDefault();
    form = $(this);
    appendActionValue(form);
    url = form.attr('action');
    res = $.post(url, form.serialize());
    res.done(function(data) {
      return replacePartial(data);
    });
    return res.fail(function() {
      setMessage(templates.dashboardPluginError);
    });
  };
  prepareActionHandlers = function() {
    var forms, selects;
    actionMap = JSON.parse($(actionMapSelector).html());
    forms = container.find(actionFormSelector);
    forms.on('submit', submitAction);
    selects = forms.find('select');
    selects.on('change', changeVersion);
    return selects.each(changeVersion);
  };
  initPlugin = function(e) {
    loadMessages();
    patchUploadForm();
    return prepareActionHandlers();
  };
  return section.on('dashboard-plugin-loaded', initPlugin);
})(this, this.jQuery, this.templates);
